diff -Naur a/Telegram/SourceFiles/platform/linux/linux_libs.cpp b/Telegram/SourceFiles/platform/linux/linux_libs.cpp
--- a/Telegram/SourceFiles/platform/linux/linux_libs.cpp	2016-06-26 18:03:09.655980663 -0400
+++ b/Telegram/SourceFiles/platform/linux/linux_libs.cpp	2016-06-26 18:07:02.905985251 -0400
@@ -118,9 +118,6 @@
 f_g_object_ref_sink g_object_ref_sink = nullptr;
 f_g_object_unref g_object_unref = nullptr;
 f_g_idle_add g_idle_add = nullptr;
-f_unity_launcher_entry_set_count unity_launcher_entry_set_count = nullptr;
-f_unity_launcher_entry_set_count_visible unity_launcher_entry_set_count_visible = nullptr;
-f_unity_launcher_entry_get_for_desktop_id unity_launcher_entry_get_for_desktop_id = nullptr;
 
 void start() {
 	DEBUG_LOG(("Loading libraries"));
@@ -173,15 +170,6 @@
 	} else {
 		LOG(("Could not load gtk-x11-2.0!"));
 	}
-
-	if (QString(getenv("XDG_CURRENT_DESKTOP")).toLower() == qstr("unity")) {
-		QLibrary lib_unity(qstr("unity"), 9, 0);
-		loadLibrary(lib_unity, "unity", 9);
-
-		load(lib_unity, "unity_launcher_entry_get_for_desktop_id", unity_launcher_entry_get_for_desktop_id);
-		load(lib_unity, "unity_launcher_entry_set_count", unity_launcher_entry_set_count);
-		load(lib_unity, "unity_launcher_entry_set_count_visible", unity_launcher_entry_set_count_visible);
-	}
 }
 
 } // namespace Libs
diff -Naur a/Telegram/SourceFiles/platform/linux/linux_libs.h b/Telegram/SourceFiles/platform/linux/linux_libs.h
--- a/Telegram/SourceFiles/platform/linux/linux_libs.h	2016-06-26 18:03:09.655980663 -0400
+++ b/Telegram/SourceFiles/platform/linux/linux_libs.h	2016-06-26 18:07:32.635985836 -0400
@@ -27,8 +27,6 @@
 #define signals public
 } // extern "C"
 
-#include <unity/unity/unity.h>
-
 namespace Platform {
 namespace Libs {
 
@@ -167,14 +165,5 @@
 typedef guint (*f_g_idle_add)(GSourceFunc function, gpointer data);
 extern f_g_idle_add g_idle_add;
 
-typedef void (*f_unity_launcher_entry_set_count)(UnityLauncherEntry* self, gint64 value);
-extern f_unity_launcher_entry_set_count unity_launcher_entry_set_count;
-
-typedef void (*f_unity_launcher_entry_set_count_visible)(UnityLauncherEntry* self, gboolean value);
-extern f_unity_launcher_entry_set_count_visible unity_launcher_entry_set_count_visible;
-
-typedef UnityLauncherEntry* (*f_unity_launcher_entry_get_for_desktop_id)(const gchar* desktop_id);
-extern f_unity_launcher_entry_get_for_desktop_id unity_launcher_entry_get_for_desktop_id;
-
 } // namespace Libs
 } // namespace Platform
diff -Naur a/Telegram/SourceFiles/platform/linux/main_window_linux.cpp b/Telegram/SourceFiles/platform/linux/main_window_linux.cpp
--- a/Telegram/SourceFiles/platform/linux/main_window_linux.cpp	2016-06-26 18:03:09.655980663 -0400
+++ b/Telegram/SourceFiles/platform/linux/main_window_linux.cpp	2016-06-26 18:08:37.985987121 -0400
@@ -31,7 +31,7 @@
 namespace {
 
 bool noQtTrayIcon = false, tryAppIndicator = false;
-bool useGtkBase = false, useAppIndicator = false, useStatusIcon = false, trayIconChecked = false, useUnityCount = false;
+bool useGtkBase = false, useAppIndicator = false, useStatusIcon = false, trayIconChecked = false;
 
 AppIndicator *_trayIndicator = 0;
 GtkStatusIcon *_trayIcon = 0;
@@ -181,8 +181,6 @@
     return FALSE;
 }
 
-UnityLauncherEntry *_psUnityLauncherEntry = nullptr;
-
 } // namespace
 
 MainWindow::MainWindow()
@@ -319,14 +317,6 @@
 	int32 counter = App::histories().unreadBadge();
 
 	setWindowTitle((counter > 0) ? qsl("Telegram (%1)").arg(counter) : qsl("Telegram"));
-	if (_psUnityLauncherEntry) {
-		if (counter > 0) {
-			Libs::unity_launcher_entry_set_count(_psUnityLauncherEntry, (counter > 9999) ? 9999 : counter);
-			Libs::unity_launcher_entry_set_count_visible(_psUnityLauncherEntry, TRUE);
-		} else {
-			Libs::unity_launcher_entry_set_count_visible(_psUnityLauncherEntry, FALSE);
-		}
-	}
 
 	if (noQtTrayIcon) {
 		if (useAppIndicator) {
@@ -415,13 +405,6 @@
 	if (useStatusIcon) {
 		DEBUG_LOG(("Status icon api loaded!"));
 	}
-
-	useUnityCount = (Libs::unity_launcher_entry_get_for_desktop_id != nullptr)
-			&& (Libs::unity_launcher_entry_set_count != nullptr)
-			&& (Libs::unity_launcher_entry_set_count_visible != nullptr);
-	if (useUnityCount) {
-		DEBUG_LOG(("Unity count api loaded!"));
-	}
 }
 
 void MainWindow::psUpdateDelegate() {
@@ -597,23 +580,6 @@
 
 void MainWindow::psFirstShow() {
 	psCreateTrayIcon();
-
-	if (useUnityCount) {
-		_psUnityLauncherEntry = Libs::unity_launcher_entry_get_for_desktop_id("telegramdesktop.desktop");
-		if (_psUnityLauncherEntry) {
-			LOG(("Found Unity Launcher entry telegramdesktop.desktop!"));
-		} else {
-			_psUnityLauncherEntry = Libs::unity_launcher_entry_get_for_desktop_id("Telegram.desktop");
-			if (_psUnityLauncherEntry) {
-				LOG(("Found Unity Launcher entry Telegram.desktop!"));
-			} else {
-				LOG(("Could not get Unity Launcher entry!"));
-			}
-		}
-	} else {
-		LOG(("Not using Unity Launcher count."));
-	}
-
 	psUpdateMargins();
 
 	bool showShadows = true;
